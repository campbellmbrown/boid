name: Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_VERSION: '6.0' # The .NET SDK version to use

jobs:
  formatting:
    name: Basic Checks
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Temp fix for path to content pipeline
        run: sed -i s/campb/runneradmin/g Boid/Content/Content.mgcb

      - name: Build
        run: dotnet build Boid --configuration Release

      - name: Test
        run: dotnet test BoidTests

      - name: C# Formatting
        run: |
          dotnet format Boid --verify-no-changes
          dotnet format BoidTests --verify-no-changes

  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Temp fix for path to content pipeline
        run: sed -i s/campb/runneradmin/g Boid/Content/Content.mgcb

      - name: Build, test, and analyze
        shell: powershell
        env:
          # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # The secret referenced in the command-line by SONAR_TOKEN should be generated
          # from https://sonarcloud.io/account/security/
          # The organization and project arguments (see /o and /k) are displayed
          # on the project dashboard in SonarCloud.
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet clean Boid
          dotnet tool install --global dotnet-coverage
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"campbellmbrown_boid" /o:"campbellmbrown" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build Boid --configuration Release
          dotnet-coverage collect 'dotnet test BoidTests' -f xml -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
